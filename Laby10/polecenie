Lab 10 - monitory w języku Java
Zadanie zaliczeniowe (Java):

Należy napisać korzystając z mechanizmu monitorów w języku Java aplikację implementującą podwójny problem producent-konsument dla wielu producentów oraz wielu konsumentów (producenci/konsumenci: X, Y, Z oraz zasoby: A, B).

Założenia:

mamy dwie powiązane ze sobą pary (konsumenci z pierwszej pary są jednocześnie producentami w drugiej)
producenci X i konsumenci Y wymieniający między sobą zasób A
producenci Y i konsumenci Z wymieniający między sobą zasób B
liczebność zbiorów X, Y i Z jest konfigurowalna (parametry wywołania lub plik konfiguracyjny)
współdzielone bufory dla zasobów A i B są ograniczone, ich rozmiar jest konfigurowalny
dla konsumentów/producentów Y priorytet operacji konsumpcji zasobu A nad produkcją zasobu B (lub odwrotnie) jest konfigurowalny
każdy producent i każdy konsument to osobny wątek (mamy łącznie X + Y + Z różnych wątków roboczych)
synchronizacja zasobów odbywa się z wykorzystaniem monitorów (metody wait oraz notify)
wszyscy konsumenci i producenci czekają na swoją kolej w obsłudze
prędkości produkcji i konsumpcji są konfigurowalne (potem w kodzie mogą zostać lekko „rozmyte losowo”)
co ustalony, konfigurowalny okres czasu (np. 5 sek.) program melduje (wypisując na ekranie) aktualny stan zasobu A oraz zasobu B, dodatkowo stany te zrzucane są do ustalonego pliku tekstowego (np. CSV) - potem na ich podstawie należy przygotować wykresy (np. w Excelu) chwilowej zajętości buforów A i B
na żądanie użytkownika program melduje ostateczny (z chwili odbioru żądania zamknięcia) stan zasobów A oraz B, zwalnia co trzeba :), zamyka wszystkie wątki i kończy działanie.
